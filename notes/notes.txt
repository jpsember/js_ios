To create an application <app>:

[] From XCode, choose File/New/Project.../Empty Application

[] Give the project name a simple name, e.g. 'js_ios', 'concrete_app'

[] put it in the ios subdirectory

[] Make sure frameworks include
      CoreGraphics,Foundation,OpenGLES,QuartzCore,UIKit
   (some or all of these may ALREADY be in the project)
   and that these are in the 'Link Binary With Libraries' section of the Build Phases for ALL the targets;
   add XCTest framework for test target only

[] Move Images.xcassets to the 'Supporting Files' group

[] Delete the 'main.m' and 'AppDelegate.m' file, since we'll be adding the one from js_ios

[] Create a symbolic link to the 'js_ios' folder within the js_ios project.

From the ...workspace/ios/<app> directory:

ln -s ../js_ios/js_ios js_ios

[] In XCode, File / Add Files to "<app>"... :

    Add the js_ios (symlink folder); don't copy the items, but do create groups; add to the <app> target (but not the unit test target)

[] Remove the references to js_ios versions of InfoPlist.strings, and images.xcassets, and TestUtil.*

[] Move the js_ios versions of AppDelegate to your project's test directory; add your own versions of these in your project's app directory (if it has one)

[] Follow the above procedure for any other libraries to be included

[] Create a 'test_resources' folder in the project's directory

    ...workspace/ios/<app>/test_resources

  Add whatever folders and subdirectories are required. Then, add them to the XCode project but select 'add as folder' (not as a group).
  Only add this folder to the test target.
  Don't name this folder 'resources'... the simulator won't run!  Probably conflicts with built-in resources folder or something.
  Do another version, app_resources, for the app (non-test) version.

[] Delete the <app>Tests.m file that XCode created in the Tests folder, and add references to js_ios/TestUtil.*

[] If things get fucked up with XCode simulator, e.g., "iOS Simulator failed to install the application",
  Run the command line tool 'cleanxcode'

[] For the test target, add the js_ios 'TestUtil' source to Build Phases

[] To avoid some linker problems, the 'symbols hidden by default' should be set to NO for both application and test targets.
   See "http://stackoverflow.com/questions/5783294/link-error-while-building-a-unit-test-target"

[] Add 'DEBUG=0' to the release target / build settings / preprocessor macros / Release

BitBucket setup
---------------
[] Passwordless login: follow directions https://confluence.atlassian.com/display/BITBUCKET/Set+up+SSH+for+Git

